{"version":3,"sources":["../src/JS/darktheme.js","../src/JS/main.js"],"names":["theme","localStorage","getItem","themeToggler","document","querySelector","body","darkTheme","addEventListener","e","checked","classList","replace","setItem","add","console","log","remove","targets","querySelectorAll","lazyLoad","target","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","img","src","getAttribute","setAttribute","disconnect","observe"],"mappings":";;;AA0BC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA1BD,IAAMA,EAAQC,aAAaC,QAAQ,SAC7BC,EAAeC,SAASC,cAAc,cACtCC,EAAOF,SAASE,KACP,EAAA,SAACC,GAEdJ,EAAaK,iBAAiB,SAAU,SAACC,GACnCN,EAAaO,SACfJ,EAAKK,UAAUC,QAAQ,QAAS,QAChCX,aAAaY,QAAQ,QAAS,UAE9BP,EAAKK,UAAUC,QAAQ,OAAQ,SAC/BX,aAAaY,QAAQ,QAAS,YAI9Bb,IACFM,EAAKK,UAAUG,IAAId,GAEnBe,QAAQC,IAAIhB,GACE,SAAVA,EACFG,EAAaO,SAAU,GAEvBJ,EAAKK,UAAUM,OAAO,QACtBd,EAAaO,SAAU,KAG5B,QAAA,QAAA;;ACGD,aA7BA,QAAA,qBACA,IAAA,EAAA,EAAA,QAAA,gBA4BA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IA1BA,EAAA,EAAA,WAEA,IAAMQ,EAAUd,SAASe,iBAAiB,iBAEpCC,EAAW,SAACC,GACL,IAAIC,qBAAqB,SAACC,EAASC,GAC5CD,EAAQE,QAAQ,SAACC,GACXA,GAAAA,EAAMC,eAAgB,CAElBC,IAAAA,EAAMF,EAAML,OAEZQ,EAAMD,EAAIE,aAAa,YAC7Bf,QAAQC,IAAIa,GAEZD,EAAIG,aAAa,MAAOF,GAExBD,EAAIjB,UAAUM,OAAO,QACrBF,QAAQC,IAAIY,GACZJ,EAASQ,kBAKZC,QAAQZ,IAGbH,EAAQO,QAAQL","file":"main.e6786d9f.js","sourceRoot":"../public","sourcesContent":["const theme = localStorage.getItem(\"theme\");\r\nconst themeToggler = document.querySelector(\"#darkTheme\");\r\nconst body = document.body;\r\nexport default (darkTheme) => {\r\n  // get darktheme\r\n  themeToggler.addEventListener(\"change\", (e) => {\r\n    if (themeToggler.checked) {\r\n      body.classList.replace(\"white\", \"dark\");\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      body.classList.replace(\"dark\", \"white\");\r\n      localStorage.setItem(\"theme\", \"white\");\r\n    }\r\n  });\r\n\r\n  if (theme) {\r\n    body.classList.add(theme);\r\n\r\n    console.log(theme);\r\n    if (theme === \"dark\") {\r\n      themeToggler.checked = true;\r\n    } else {\r\n      body.classList.remove(\"dark\");\r\n      themeToggler.checked = false;\r\n    }\r\n  }\r\n};\r\n","import \"../SASS/main.scss\";\r\nimport darktheme from \"./darktheme\";\r\n\r\ndarktheme();\r\n\r\nconst targets = document.querySelectorAll(\".project__img\");\r\n\r\nconst lazyLoad = (target) => {\r\n  const io = new IntersectionObserver((entries, observer) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        //Get the Image\r\n        const img = entry.target;\r\n        //get the src\r\n        const src = img.getAttribute(\"data-src\");\r\n        console.log(src);\r\n        //replace data-src with src\r\n        img.setAttribute(\"src\", src);\r\n        //remove the opacity\r\n        img.classList.remove(\"fade\");\r\n        console.log(img);\r\n        observer.disconnect();\r\n      }\r\n    });\r\n  });\r\n\r\n  io.observe(target);\r\n};\r\n\r\ntargets.forEach(lazyLoad);\r\n"]}